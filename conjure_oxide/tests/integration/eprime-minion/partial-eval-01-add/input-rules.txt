[1mtest_span[0m[2m:[0m hello
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "flatten_nested_sum", application: 0x558bb68e0310, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y"))]), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "flatten_nested_sum", application: 0x558bb68e0310, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "partial_evaluator", application: 0x558bb68ea060, rule_sets: [("Base", 9000)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "flatten_nested_sum", application: 0x558bb68e0310, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "flatten_nested_sum", application: 0x558bb68e0310, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "sum_eq_to_sumeq", application: 0x558bb68e5d40, rule_sets: [("Minion", 4400)] }, to Expression: Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100)))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "partial_evaluator", application: 0x558bb68ea060, rule_sets: [("Base", 9000)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65)))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "sumeq_to_minion", application: 0x558bb68e62b0, rule_sets: [("Minion", 4400)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100)))])
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "sumeq_to_minion", application: 0x558bb68e62b0, rule_sets: [("Minion", 4400)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65)))])
