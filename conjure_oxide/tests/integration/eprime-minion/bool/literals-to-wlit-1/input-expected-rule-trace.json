[
  {
    "fields": {
      "initial_expression": "Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))), And(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"d\")))])])",
      "rule_name": "\"distribute_or_over_and\"",
      "rule_set": "[(\"Base\", 8400)]",
      "transformed_expression": "And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"d\")))])])"
    }
  },
  {
    "fields": {
      "initial_expression": "Not(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"c\"))))",
      "rule_name": "\"not_literal_to_wliteral\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "FlatWatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"c\"), Bool(false))"
    }
  },
  {
    "fields": {
      "initial_expression": "Not(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"c\"))))",
      "rule_name": "\"not_literal_to_wliteral\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "FlatWatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"c\"), Bool(false))"
    }
  },
  {
    "Number of rules applied": 3
  }
]