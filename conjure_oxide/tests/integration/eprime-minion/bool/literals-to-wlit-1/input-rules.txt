Event { fields: ValueSet { message: trace test, callsite: Identifier(0x105694018) }, metadata: Metadata { name: "event conjure_oxide/tests/generated_tests.rs:87", target: "rule_engine", level: Level(Trace), module_path: "generated_tests", location: conjure_oxide/tests/generated_tests.rs:87, fields: {message}, callsite: Identifier(0x105694018), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), And(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("b")), Reference(Metadata { clean: false, etype: None }, UserName("d"))])]), Reference(Metadata { clean: false, etype: None }, UserName("b")), Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("d")), Reference(Metadata { clean: false, etype: None }, UserName("c"))])]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), And(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("b")), Reference(Metadata { clean: false, etype: None }, UserName("d"))])]), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true)), Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("d")), Reference(Metadata { clean: false, etype: None }, UserName("c"))])]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), resulting in: Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName("a"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "distribute_or_over_and", application: 0x104f38e9c, rule_sets: [("Base", 8400)] }, to Expression: Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), And(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("b")), Reference(Metadata { clean: false, etype: None }, UserName("d"))])]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("d"))])]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "unwrap_nested_and", application: 0x104f36ed0, rule_sets: [("Base", 8800)] }, to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName("a"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true))]), And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("d"))])]), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true)), Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("d")), Reference(Metadata { clean: false, etype: None }, UserName("c"))])]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName("a"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("d"))]), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true)), Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("d")), Reference(Metadata { clean: false, etype: None }, UserName("c"))])]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), resulting in: Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("b"), Bool(true))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), resulting in: WatchedLiteral(Metadata { clean: false, etype: None }, UserName("c"), Bool(false)), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), Reference(Metadata { clean: false, etype: None }, UserName("d"))]), resulting in: Or(Metadata { clean: false, etype: None }, [Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("d"), Bool(true))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Not(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("c"))), resulting in: WatchedLiteral(Metadata { clean: false, etype: None }, UserName("c"), Bool(false)), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "boolean_literal_to_wliteral", application: 0x104f3d560, rule_sets: [("Minion", 4100)] }, to Expression: Or(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("d")), Reference(Metadata { clean: false, etype: None }, UserName("c"))]), resulting in: Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName("d"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName("c"), Bool(true))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
