{"level":"TRACE","message":"Rule applied: \"flatten_nested_sum\", to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))]), resulting in: Sum(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"sum_eq_to_sumeq\", to Expression: Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), resulting in: SumEq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"sumeq_to_minion\", to Expression: SumEq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), SumLeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), SumLeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))))]), Geq(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))))]), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), SumLeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(4)))), Geq(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"geq_to_ineq\", to Expression: Geq(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))), resulting in: Ineq(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(0))))","target":"rule_engine"}
