Event { fields: ValueSet { message: trace test, callsite: Identifier(0x105694018) }, metadata: Metadata { name: "event conjure_oxide/tests/generated_tests.rs:87", target: "rule_engine", level: Level(Trace), module_path: "generated_tests", location: conjure_oxide/tests/generated_tests.rs:87, fields: {message}, callsite: Identifier(0x105694018), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "flatten_nested_sum", application: 0x104f368d8, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y"))]), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "flatten_nested_sum", application: 0x104f368d8, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "partial_evaluator", application: 0x104f3e134, rule_sets: [("Base", 9000)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "flatten_nested_sum", application: 0x104f368d8, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Constant(Metadata { clean: false, etype: None }, Int(20)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(5))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "flatten_nested_sum", application: 0x104f368d8, rule_sets: [("Base", 8800)] }, to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10))]), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "sum_eq_to_sumeq", application: 0x104f3ad2c, rule_sets: [("Minion", 4400)] }, to Expression: Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))]), Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "partial_evaluator", application: 0x104f3e134, rule_sets: [("Base", 9000)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65))), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "sumeq_to_minion", application: 0x104f3b12c, rule_sets: [("Minion", 4400)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Constant(Metadata { clean: false, etype: None }, Int(10)), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(25))], Constant(Metadata { clean: false, etype: None }, Int(100)))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "sumeq_to_minion", application: 0x104f3b12c, rule_sets: [("Minion", 4400)] }, to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Constant(Metadata { clean: false, etype: None }, Int(65)))]), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
