{"level":"TRACE","message":"Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), And(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\"))), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))])]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\"))), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\"))), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"boolean_literal_to_wliteral\", to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"c\"), Bool(true))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(false)))]), resulting in: Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"unwrap_nested_or\", to Expression: Or(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])]), resulting in: Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"boolean_literal_to_wliteral\", to Expression: Or(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), resulting in: Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"a\"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"b\"), Bool(true))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: Or(Metadata { clean: false, etype: None }, [AllDiff(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(1))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(3)))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))]), resulting in: FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true)))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"a\"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"b\"), Bool(true))]), FactorE(Metadata { clean: false, etype: None }, Literal(Bool(true))), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"c\"), Bool(true))]), resulting in: And(Metadata { clean: false, etype: None }, [Or(Metadata { clean: false, etype: None }, [WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"a\"), Bool(true)), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"b\"), Bool(true))]), WatchedLiteral(Metadata { clean: false, etype: None }, UserName(\"c\"), Bool(true))])","target":"rule_engine"}
