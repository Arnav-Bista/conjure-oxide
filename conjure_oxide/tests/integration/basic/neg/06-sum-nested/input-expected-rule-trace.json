[
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Neg(Metadata { clean: false, etype: None }, Minus(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\")))))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])",
      "rule_name": "\"normalise_associative_commutative\"",
      "rule_set": "[(\"Base\", 8900)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Neg(Metadata { clean: false, etype: None }, Minus(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Minus(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))",
      "rule_name": "\"minus_to_sum\"",
      "rule_set": "[(\"Base\", 8400)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))])",
      "rule_name": "\"normalise_associative_commutative\"",
      "rule_set": "[(\"Base\", 8900)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))]))",
      "rule_name": "\"distribute_negation_over_sum\"",
      "rule_set": "[(\"Base\", 8400)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))), Neg(Metadata { clean: false, etype: None }, Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\")))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))))",
      "rule_name": "\"apply_eval_constant\"",
      "rule_set": "[(\"Constant\", 9001)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Neg(Metadata { clean: false, etype: None }, Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\")))))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])",
      "rule_name": "\"normalise_associative_commutative\"",
      "rule_set": "[(\"Base\", 8900)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Neg(Metadata { clean: false, etype: None }, Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\")))))",
      "rule_name": "\"elmininate_double_negation\"",
      "rule_set": "[(\"Base\", 8400)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])",
      "rule_name": "\"flatten_generic\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(0), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))))",
      "rule_name": "\"introduce_minuseq_from_aux_decl\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatMinusEq(Metadata { clean: false, etype: None }, Reference(MachineName(0)), Reference(UserName(\"y\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(1), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))))",
      "rule_name": "\"introduce_minuseq_from_aux_decl\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatMinusEq(Metadata { clean: false, etype: None }, Reference(MachineName(1)), Reference(UserName(\"z\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Eq(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]))",
      "rule_name": "\"sum_eq_to_inequalities\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))), Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))",
      "rule_name": "\"introduce_sumleq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumLeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1)), Literal(Int(-1)), Reference(UserName(\"a\")), Reference(UserName(\"b\"))], Reference(UserName(\"x\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))",
      "rule_name": "\"introduce_sumgeq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumGeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1)), Literal(Int(-1)), Reference(UserName(\"a\")), Reference(UserName(\"b\"))], Reference(UserName(\"x\")))"
    }
  },
  {
    "Number of rules applied": 13
  }
]