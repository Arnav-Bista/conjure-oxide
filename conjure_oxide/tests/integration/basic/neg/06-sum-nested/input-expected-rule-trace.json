[
  {
    "rule_applied": "normalise_associative_commutative ([(\\\"Base\\\", 8400)])",
    "initial_expression": "Sum([Sum([-(y), -((Sum([z, 1]) - a))]), b])",
    "tranformed_expression": "Sum([-(y), -((Sum([z, 1]) - a)), b])",
    "new_top": "[]"
  },
  {
    "rule_applied": "minus_to_sum ([(\\\"Base\\\", 8400)])",
    "initial_expression": "(Sum([z, 1]) - a)",
    "tranformed_expression": "Sum([Sum([z, 1]), -(a)])",
    "new_top": "[]"
  },
  {
    "rule_applied": "distribute_negation_over_sum ([(\\\"Base\\\", 8400)])",
    "initial_expression": "-(Sum([Sum([z, 1]), -(a)]))",
    "tranformed_expression": "Sum([-(Sum([z, 1])), -(-(a))])",
    "new_top": "[]"
  },
  {
    "rule_applied": "normalise_associative_commutative ([(\\\"Base\\\", 8400)])",
    "initial_expression": "Sum([-(y), Sum([-(Sum([z, 1])), -(-(a))]), b])",
    "tranformed_expression": "Sum([-(y), -(Sum([z, 1])), -(-(a)), b])",
    "new_top": "[]"
  },
  {
    "rule_applied": "distribute_negation_over_sum ([(\\\"Base\\\", 8400)])",
    "initial_expression": "-(Sum([z, 1]))",
    "tranformed_expression": "Sum([-(z), -(1)])",
    "new_top": "[]"
  },
  {
    "rule_applied": "apply_eval_constant ([(\\\"Constant\\\", 9001)])",
    "initial_expression": "-(1)",
    "tranformed_expression": "-1",
    "new_top": "[]"
  },
  {
    "rule_applied": "normalise_associative_commutative ([(\\\"Base\\\", 8400)])",
    "initial_expression": "Sum([-(y), Sum([-(z), -1]), -(-(a)), b])",
    "tranformed_expression": "Sum([-(y), -(z), -1, -(-(a)), b])",
    "new_top": "[]"
  },
  {
    "rule_applied": "elmininate_double_negation ([(\\\"Base\\\", 8400)])",
    "initial_expression": "-(-(a))",
    "tranformed_expression": "a",
    "new_top": "[]"
  },
  {
    "rule_applied": "flatten_vecop ([(\\\"Minion\\\", 4400)])",
    "initial_expression": "Sum([-(y), -(z), -1, a, b])",
    "tranformed_expression": "Sum([__0, __1, -1, a, b])",
    "new_top": "[__0 =aux -(y), __1 =aux -(z)]"
  },
  {
    "rule_applied": "introduce_minuseq_from_aux_decl ([(\\\"Minion\\\", 4400)])",
    "initial_expression": "__0 =aux -(y)",
    "tranformed_expression": "MinusEq(__0,y)",
    "new_top": "[]"
  },
  {
    "rule_applied": "introduce_minuseq_from_aux_decl ([(\\\"Minion\\\", 4400)])",
    "initial_expression": "__1 =aux -(z)",
    "tranformed_expression": "MinusEq(__1,z)",
    "new_top": "[]"
  },
  {
    "rule_applied": "sum_eq_to_sumeq ([(\\\"Minion\\\", 4200)])",
    "initial_expression": "(x = Sum([__0, __1, -1, a, b]))",
    "tranformed_expression": "SumEq([__0, __1, -1, a, b], x)",
    "new_top": "[]"
  },
  {
    "rule_applied": "sumeq_to_minion ([(\\\"Minion\\\", 4400)])",
    "initial_expression": "SumEq([__0, __1, -1, a, b], x)",
    "tranformed_expression": "And([SumLeq([__0, __1, -1, a, b], x), SumGeq([__0, __1, -1, a, b], x)])",
    "new_top": "[]"
  },
  {
    "Number of rules applied": 13
  }
]