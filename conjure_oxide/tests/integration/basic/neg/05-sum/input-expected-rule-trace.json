[
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))])",
      "rule_name": "\"flatten_generic\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(0), Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))))",
      "rule_name": "\"introduce_minuseq_from_aux_decl\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatMinusEq(Metadata { clean: false, etype: None }, Reference(MachineName(0)), Reference(UserName(\"y\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Eq(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))]))",
      "rule_name": "\"sum_eq_to_inequalities\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))), Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))",
      "rule_name": "\"introduce_sumleq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumLeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(UserName(\"z\"))], Reference(UserName(\"x\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"z\")))]), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))))",
      "rule_name": "\"introduce_sumgeq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumGeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(UserName(\"z\"))], Reference(UserName(\"x\")))"
    }
  },
  {
    "Number of rules applied": 5
  }
]