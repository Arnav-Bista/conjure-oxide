{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: Rule { name: \"leq_to_ineq\", application: 0x1032aee68, rule_sets: [(\"Minion\", 4100)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Max(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(2)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))]), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Ineq(Metadata { clean: false, etype: None }, Max(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(2)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))]), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x103a140f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x103a140f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: Rule { name: \"max_to_var\", application: 0x1032ab81c, rule_sets: [(\"Base\", 100)] }, to Expression: Max(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(2)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))]), resulting in: Reference(Metadata { clean: false, etype: None }, MachineName(0)), callsite: Identifier(0x103a140f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x103a140f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: Rule { name: \"unwrap_nested_and\", application: 0x1032aa170, rule_sets: [(\"Base\", 8800)] }, to Expression: And(Metadata { clean: false, etype: None }, [Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), And(Metadata { clean: false, etype: None }, [Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2))), Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\")))])])]), resulting in: And(Metadata { clean: false, etype: None }, [Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2))), Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\")))])]), callsite: Identifier(0x103a140f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x103a140f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: Rule { name: \"geq_to_ineq\", application: 0x1032aec4c, rule_sets: [(\"Minion\", 4100)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Ineq(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(2)), Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x103a140f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x103a140f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: Rule { name: \"geq_to_ineq\", application: 0x1032aec4c, rule_sets: [(\"Minion\", 4100)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x103a140f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x103a140f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
