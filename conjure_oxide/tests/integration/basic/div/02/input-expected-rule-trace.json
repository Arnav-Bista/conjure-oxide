{"level":"TRACE","message":"Rule applied: \"geq_to_ineq\", to Expression: Geq(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), UnsafeDiv(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2))))), resulting in: Ineq(Metadata { clean: false, etype: None }, UnsafeDiv(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2)))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(0))))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"apply_eval_constant\", to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, FactorE(Metadata { clean: false, etype: None }, Literal(Int(4))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(2)))), resulting in: FactorE(Metadata { clean: false, etype: None }, Literal(Int(2)))","target":"rule_engine"}
