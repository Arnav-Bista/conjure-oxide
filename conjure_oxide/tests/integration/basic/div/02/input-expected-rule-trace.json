{"level":"TRACE","message":"Rule applied: \"geq_to_ineq\", to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2)))), resulting in: Ineq(Metadata { clean: false, etype: None }, UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Constant(Metadata { clean: false, etype: None }, Int(0)))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"apply_eval_constant\", to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Constant(Metadata { clean: false, etype: None }, Int(2))","target":"rule_engine"}
