Event { fields: ValueSet { message: trace test, callsite: Identifier(0x105694018) }, metadata: Metadata { name: "event conjure_oxide/tests/generated_tests.rs:87", target: "rule_engine", level: Level(Trace), module_path: "generated_tests", location: conjure_oxide/tests/generated_tests.rs:87, fields: {message}, callsite: Identifier(0x105694018), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "geq_to_ineq", application: 0x104f3b9ac, rule_sets: [("Minion", 4100)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("a")), UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2)))), resulting in: Ineq(Metadata { clean: false, etype: None }, UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), Reference(Metadata { clean: false, etype: None }, UserName("a")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "apply_eval_constant", application: 0x104f3a820, rule_sets: [("Constant", 9001)] }, to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Constant(Metadata { clean: false, etype: None }, Int(2)), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applicable: Rule { name: "div_to_bubble", application: 0x104f3a4c4, rule_sets: [("Bubble", 6000)] }, to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Bubble(Metadata { clean: false, etype: None }, SafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), Neq(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0)))), callsite: Identifier(0x105694108) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:308", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:308, fields: {message}, callsite: Identifier(0x105694108), kind: Kind(EVENT) }, parent: Current }
