[1mtest_span[0m[2m:[0m hello
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "geq_to_ineq", application: 0x558bb68e6e60, rule_sets: [("Minion", 4100)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("a")), UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2)))), resulting in: Ineq(Metadata { clean: false, etype: None }, UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), Reference(Metadata { clean: false, etype: None }, UserName("a")), Constant(Metadata { clean: false, etype: None }, Int(0)))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "apply_eval_constant", application: 0x558bb68e56a0, rule_sets: [("Constant", 9001)] }, to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Constant(Metadata { clean: false, etype: None }, Int(2))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "div_to_bubble", application: 0x558bb68e5220, rule_sets: [("Bubble", 6000)] }, to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Bubble(Metadata { clean: false, etype: None }, SafeDiv(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(4)), Constant(Metadata { clean: false, etype: None }, Int(2))), Neq(Metadata { clean: false, etype: None }, Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))))
