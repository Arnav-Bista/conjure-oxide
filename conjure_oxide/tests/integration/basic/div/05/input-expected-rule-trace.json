{"level":"TRACE","message":"Rule applied: \"div_to_bubble\", to Expression: UnsafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))), resulting in: Bubble(Metadata { clean: false, etype: None }, SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))), Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0))))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"bubble_up\", to Expression: Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Bubble(Metadata { clean: false, etype: None }, SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))), Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0))))), resulting in: Bubble(Metadata { clean: false, etype: None }, Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0)))]))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"expand_bubble\", to Expression: Bubble(Metadata { clean: false, etype: None }, Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0)))])), resulting in: And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0)))])])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0)))])]), resulting in: And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0)))])","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"flatten_safediv\", to Expression: Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), SafeDiv(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")))), resulting in: Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, MachineName(0)))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, MachineName(0))), Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0))), And(Metadata { clean: false, etype: None }, [DivEq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Reference(Metadata { clean: false, etype: None }, MachineName(0)))])]), resulting in: And(Metadata { clean: false, etype: None }, [Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, MachineName(0))), Neq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Constant(Metadata { clean: false, etype: None }, Int(0))), DivEq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\")), Reference(Metadata { clean: false, etype: None }, MachineName(0)))])","target":"rule_engine"}
