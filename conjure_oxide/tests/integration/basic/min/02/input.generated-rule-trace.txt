Event { fields: ValueSet { message: trace test, callsite: Identifier(0x555aa437c020) }, metadata: Metadata { name: "event conjure_oxide/tests/generated_tests.rs:77", target: "rule_engine", level: Level(Trace), module_path: "generated_tests", location: conjure_oxide/tests/generated_tests.rs:77, fields: {message}, callsite: Identifier(0x555aa437c020), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applied: Rule { name: "leq_to_ineq", application: 0x555aa3a23400, rule_sets: [("Minion", 4100)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Constant(Metadata { clean: false, etype: None }, Int(2))), resulting in: Ineq(Metadata { clean: false, etype: None }, Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x555aa437c048) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:366", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x555aa437c048), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applied: Rule { name: "min_to_var", application: 0x555aa3a1dce0, rule_sets: [("Base", 2000)] }, to Expression: Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("a")), Reference(Metadata { clean: false, etype: None }, UserName("b"))]), resulting in: Reference(Metadata { clean: false, etype: None }, MachineName(0)), callsite: Identifier(0x555aa437c048) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:366", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x555aa437c048), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applied: Rule { name: "unwrap_nested_and", application: 0x555aa3a1cd20, rule_sets: [("Base", 8800)] }, to Expression: And(Metadata { clean: false, etype: None }, [Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a"))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a"))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b")))])])]), resulting in: And(Metadata { clean: false, etype: None }, [Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Constant(Metadata { clean: false, etype: None }, Int(2)), Constant(Metadata { clean: false, etype: None }, Int(0))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a"))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a"))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b")))])]), callsite: Identifier(0x555aa437c048) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:366", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x555aa437c048), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applied: Rule { name: "leq_to_ineq", application: 0x555aa3a23400, rule_sets: [("Minion", 4100)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("a")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x555aa437c048) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:366", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x555aa437c048), kind: Kind(EVENT) }, parent: Current }
Event { fields: ValueSet { message: Rule applied: Rule { name: "leq_to_ineq", application: 0x555aa3a23400, rule_sets: [("Minion", 4100)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName("b")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x555aa437c048) }, metadata: Metadata { name: "event crates/conjure_core/src/rule_engine/rewrite.rs:366", target: "rule_engine", level: Level(Trace), module_path: "conjure_core::rule_engine::rewrite", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x555aa437c048), kind: Kind(EVENT) }, parent: Current }
