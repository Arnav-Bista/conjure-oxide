{"fields":{"message":"; rule_applied: mod_to_bubble ([(\"Bubble\", 6000)]); initial_expression: b % c; tranformed_expression: {SafeMod(b,c) @ (c != 0)}; new_top: []"}}
{"fields":{"message":"; rule_applied: bubble_up ([(\"Bubble\", 8900)]); initial_expression: (a = {SafeMod(b,c) @ (c != 0)}); tranformed_expression: {(a = SafeMod(b,c)) @ And([(c != 0)])}; new_top: []"}}
{"fields":{"message":"; rule_applied: expand_bubble ([(\"Bubble\", 8900)]); initial_expression: {(a = SafeMod(b,c)) @ And([(c != 0)])}; tranformed_expression: And([(a = SafeMod(b,c)), And([(c != 0)])]); new_top: []"}}
{"fields":{"message":"; rule_applied: remove_unit_vector_and ([(\"Base\", 8800)]); initial_expression: And([(c != 0)]); tranformed_expression: (c != 0); new_top: []"}}
{"fields":{"message":"; rule_applied: distribute_not_over_and ([(\"Base\", 8400)]); initial_expression: Not(And([(a = SafeMod(b,c)), (c != 0)])); tranformed_expression: Or([Not((a = SafeMod(b,c))), Not((c != 0))]); new_top: []"}}
{"fields":{"message":"; rule_applied: negated_eq_to_neq ([(\"Base\", 8800)]); initial_expression: Not((a = SafeMod(b,c))); tranformed_expression: (a != SafeMod(b,c)); new_top: []"}}
{"fields":{"message":"; rule_applied: negated_neq_to_eq ([(\"Base\", 8800)]); initial_expression: Not((c != 0)); tranformed_expression: (c = 0); new_top: []"}}
{"fields":{"message":"; rule_applied: flatten_binop ([(\"Minion\", 4400)]); initial_expression: (a != SafeMod(b,c)); tranformed_expression: (a != __0); new_top: [__0 =aux SafeMod(b,c)]"}}
{"fields":{"message":"; rule_applied: introduce_modeq ([(\"Minion\", 4200)]); initial_expression: __0 =aux SafeMod(b,c); tranformed_expression: ModEq(b, c, __0); new_top: []"}}
