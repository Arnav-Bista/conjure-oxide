[
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Abs(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))), Abs(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))))])",
      "rule_name": "\"flatten_generic\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(0), Abs(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))))",
      "rule_name": "\"introduce_abseq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatAbsEq(Metadata { clean: false, etype: None }, Reference(MachineName(0)), Reference(UserName(\"x\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(1), Abs(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))))",
      "rule_name": "\"introduce_abseq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatAbsEq(Metadata { clean: false, etype: None }, Reference(MachineName(1)), Reference(UserName(\"y\")))"
    }
  },
  {
    "fields": {
      "initial_expression": "Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))",
      "rule_name": "\"sum_eq_to_inequalities\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10)))), Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))",
      "rule_name": "\"introduce_sumleq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumLeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1))], Literal(Int(10)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))",
      "rule_name": "\"introduce_sumgeq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumGeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1))], Literal(Int(10)))"
    }
  },
  {
    "Number of rules applied": 6
  }
]