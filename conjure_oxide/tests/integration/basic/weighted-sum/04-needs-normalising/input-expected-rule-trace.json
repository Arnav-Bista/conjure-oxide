[
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))))",
      "rule_name": "\"apply_eval_constant\"",
      "rule_set": "[(\"Constant\", 9001)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))))",
      "rule_name": "\"apply_eval_constant\"",
      "rule_set": "[(\"Constant\", 9001)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))])]), Neg(Metadata { clean: false, etype: None }, Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5)))])])",
      "rule_name": "\"normalise_associative_commutative\"",
      "rule_set": "[(\"Base\", 8900)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))]), Neg(Metadata { clean: false, etype: None }, Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))])), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5)))])])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))])",
      "rule_name": "\"normalise_associative_commutative\"",
      "rule_set": "[(\"Base\", 8900)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(1))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(3)))])",
      "rule_name": "\"partial_evaluator\"",
      "rule_set": "[(\"Base\", 9000)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(9)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(9)))])",
      "rule_name": "\"reorder_product\"",
      "rule_set": "[(\"Base\", 8800)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(9))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5)))])",
      "rule_name": "\"reorder_product\"",
      "rule_set": "[(\"Base\", 8800)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Lt(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(9))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Neg(Metadata { clean: false, etype: None }, Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))])), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(11))))",
      "rule_name": "\"lt_to_leq\"",
      "rule_set": "[(\"Minion\", 8400)]",
      "transformed_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(9))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Neg(Metadata { clean: false, etype: None }, Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))])), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])]), Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(11))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))]))"
    }
  },
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(11))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))])",
      "rule_name": "\"apply_eval_constant\"",
      "rule_set": "[(\"Constant\", 9001)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Literal(Int(10)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Neg(Metadata { clean: false, etype: None }, Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]))",
      "rule_name": "\"simplify_negation_of_product\"",
      "rule_set": "[(\"Base\", 8400)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1)))])",
      "rule_name": "\"partial_evaluator\"",
      "rule_set": "[(\"Base\", 9000)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-3)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\"))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(-3)))])",
      "rule_name": "\"reorder_product\"",
      "rule_set": "[(\"Base\", 8800)]",
      "transformed_expression": "Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(9))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-1))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(-5))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))",
      "rule_name": "\"introduce_weighted_sumleq_sumgeq\"",
      "rule_set": "[(\"Minion\", 4500)]",
      "transformed_expression": "FlatWeightedSumLeq(Metadata { clean: false, etype: None }, [Int(5), Int(9), Int(-3), Int(-1), Int(-5)], [Reference(UserName(\"x\")), Reference(UserName(\"y\")), Reference(UserName(\"x\")), Reference(UserName(\"y\")), Reference(UserName(\"y\"))], Literal(Int(10)))"
    }
  },
  {
    "Number of rules applied": 13
  }
]