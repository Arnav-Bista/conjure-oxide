[
  {
    "fields": {
      "initial_expression": "Sum(Metadata { clean: false, etype: None }, [Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(2))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))])])",
      "rule_name": "\"flatten_generic\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))])"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(0), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(2))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")))]))",
      "rule_name": "\"introduce_producteq\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "FlatProductEq(Metadata { clean: false, etype: None }, Reference(UserName(\"x\")), Literal(Int(2)), Reference(MachineName(0)))"
    }
  },
  {
    "fields": {
      "initial_expression": "AuxDeclaration(Metadata { clean: false, etype: None }, MachineName(1), Product(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Literal(Int(3))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")))]))",
      "rule_name": "\"introduce_producteq\"",
      "rule_set": "[(\"Minion\", 4200)]",
      "transformed_expression": "FlatProductEq(Metadata { clean: false, etype: None }, Reference(UserName(\"y\")), Literal(Int(3)), Reference(MachineName(1)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(12))))",
      "rule_name": "\"sum_eq_to_inequalities\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(12)))), Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(12))))])"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(12))))",
      "rule_name": "\"introduce_sumleq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumLeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1))], Literal(Int(12)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(1)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(12))))",
      "rule_name": "\"introduce_sumgeq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumGeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Reference(MachineName(1))], Literal(Int(12)))"
    }
  },
  {
    "Number of rules applied": 6
  }
]