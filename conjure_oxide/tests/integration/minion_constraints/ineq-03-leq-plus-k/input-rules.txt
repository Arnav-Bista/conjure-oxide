[1mtest_span[0m[2m:[0m hello
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "x_leq_y_plus_k_to_ineq", application: 0x558bb68e73c0, rule_sets: [("Minion", 4400)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("x")), Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(2))])), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(2)))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "leq_to_ineq", application: 0x558bb68e7110, rule_sets: [("Minion", 4100)] }, to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("x")), Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(2))])), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("x")), Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("y")), Constant(Metadata { clean: false, etype: None }, Int(2))]), Constant(Metadata { clean: false, etype: None }, Int(0)))
