[1mtest_span[0m[2m:[0m hello
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "flatten_sum_geq", application: 0x558bb68e57c0, rule_sets: [("Minion", 4400)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))]), Reference(Metadata { clean: false, etype: None }, UserName("z"))), resulting in: SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))], Reference(Metadata { clean: false, etype: None }, UserName("z")))
[1mtest_span[0m[2m:[0m Rule applicable: Rule { name: "geq_to_ineq", application: 0x558bb68e6e60, rule_sets: [("Minion", 4100)] }, to Expression: Geq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))]), Reference(Metadata { clean: false, etype: None }, UserName("z"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName("z")), Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName("x")), Reference(Metadata { clean: false, etype: None }, UserName("y"))]), Constant(Metadata { clean: false, etype: None }, Int(0)))
