{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"flatten_nested_sum\", to Expression: Sum(Metadata { clean: false, etype: None }, [Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))]), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))]), resulting in: Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))]), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"sum_eq_to_sumeq\", to Expression: Eq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))]), Constant(Metadata { clean: false, etype: None }, Int(4))), resulting in: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"sumeq_to_minion\", to Expression: SumEq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4)))]), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4)))]), Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")))]), resulting in: And(Metadata { clean: false, etype: None }, [SumGeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(4))), Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")))]), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"geq_to_ineq\", to Expression: Geq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
