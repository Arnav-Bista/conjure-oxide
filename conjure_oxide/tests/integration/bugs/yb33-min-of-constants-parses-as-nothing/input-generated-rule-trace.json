{"level":"TRACE","message":"Rule applied: \"sum_leq_to_sumleq\", to Expression: Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(5)), Constant(Metadata { clean: false, etype: None }, Int(7))]), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))]), Constant(Metadata { clean: false, etype: None }, Int(10))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(5)), Constant(Metadata { clean: false, etype: None }, Int(7))]), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(10)))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"apply_eval_constant\", to Expression: Min(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(5)), Constant(Metadata { clean: false, etype: None }, Int(7))]), resulting in: Constant(Metadata { clean: false, etype: None }, Int(5))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: SumLeq(Metadata { clean: false, etype: None }, [Constant(Metadata { clean: false, etype: None }, Int(5)), Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(10))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"c\"))], Constant(Metadata { clean: false, etype: None }, Int(5)))","target":"rule_engine"}
