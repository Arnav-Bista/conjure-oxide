{"level":"TRACE","message":"Rule applied: \"sum_leq_to_sumleq\", to Expression: Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(5))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(7)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))]), FactorE(Metadata { clean: false, etype: None }, Literal(Int(10)))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(5))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(7)))]), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(10))))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"apply_eval_constant\", to Expression: Min(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(5))), FactorE(Metadata { clean: false, etype: None }, Literal(Int(7)))]), resulting in: FactorE(Metadata { clean: false, etype: None }, Literal(Int(5)))","target":"rule_engine"}
{"level":"TRACE","message":"Rule applied: \"partial_evaluator\", to Expression: SumLeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Literal(Int(5))), FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(10)))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [FactorE(Metadata { clean: false, etype: None }, Reference(UserName(\"c\")))], FactorE(Metadata { clean: false, etype: None }, Literal(Int(5))))","target":"rule_engine"}
