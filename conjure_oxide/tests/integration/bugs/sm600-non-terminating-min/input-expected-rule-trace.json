{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"sum_leq_to_sumleq\", to Expression: Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))]), Constant(Metadata { clean: false, etype: None }, Int(6))]), Constant(Metadata { clean: false, etype: None }, Int(10))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))]), Constant(Metadata { clean: false, etype: None }, Int(6))], Constant(Metadata { clean: false, etype: None }, Int(10))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"partial_evaluator\", to Expression: SumLeq(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))]), Constant(Metadata { clean: false, etype: None }, Int(6))], Constant(Metadata { clean: false, etype: None }, Int(10))), resulting in: SumLeq(Metadata { clean: false, etype: None }, [Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))])], Constant(Metadata { clean: false, etype: None }, Int(4))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"min_to_var\", to Expression: Min(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))]), resulting in: Reference(Metadata { clean: false, etype: None }, MachineName(0)), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"unwrap_nested_and\", to Expression: And(Metadata { clean: false, etype: None }, [SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, MachineName(0))], Constant(Metadata { clean: false, etype: None }, Int(4))), And(Metadata { clean: false, etype: None }, [Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")))])])]), resulting in: And(Metadata { clean: false, etype: None }, [SumLeq(Metadata { clean: false, etype: None }, [Reference(Metadata { clean: false, etype: None }, MachineName(0))], Constant(Metadata { clean: false, etype: None }, Int(4))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))), Or(Metadata { clean: false, etype: None }, [Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), Eq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")))])]), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"leq_to_ineq\", to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"a\")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
{"level":"TRACE","message":"Event { fields: ValueSet { message: Rule applied: \"leq_to_ineq\", to Expression: Leq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\"))), resulting in: Ineq(Metadata { clean: false, etype: None }, Reference(Metadata { clean: false, etype: None }, MachineName(0)), Reference(Metadata { clean: false, etype: None }, UserName(\"b\")), Constant(Metadata { clean: false, etype: None }, Int(0))), callsite: Identifier(0x1035a80f8) }, metadata: Metadata { name: \"event crates/conjure_core/src/rule_engine/rewrite.rs:366\", target: \"rule_engine\", level: Level(Trace), module_path: \"conjure_core::rule_engine::rewrite\", location: crates/conjure_core/src/rule_engine/rewrite.rs:366, fields: {message}, callsite: Identifier(0x1035a80f8), kind: Kind(EVENT) }, parent: Current }","target":"rule_engine"}
