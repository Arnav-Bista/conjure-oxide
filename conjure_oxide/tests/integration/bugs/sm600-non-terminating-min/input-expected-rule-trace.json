[
  {
    "fields": {
      "initial_expression": "Min(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\")))])",
      "rule_name": "\"min_to_var\"",
      "rule_set": "[(\"Base\", 6000)]",
      "transformed_expression": "Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Sum(Metadata { clean: false, etype: None }, [Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Literal(Int(6)))]), Atomic(Metadata { clean: false, etype: None }, Literal(Int(10))))",
      "rule_name": "\"introduce_sumleq\"",
      "rule_set": "[(\"Minion\", 4400)]",
      "transformed_expression": "FlatSumLeq(Metadata { clean: false, etype: None }, [Reference(MachineName(0)), Literal(Int(6))], Literal(Int(10)))"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"a\"))))",
      "rule_name": "\"leq_to_ineq\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "FlatIneq(Metadata { clean: false, etype: None }, Reference(MachineName(0)), Reference(UserName(\"a\")), Int(0))"
    }
  },
  {
    "fields": {
      "initial_expression": "Leq(Metadata { clean: false, etype: None }, Atomic(Metadata { clean: false, etype: None }, Reference(MachineName(0))), Atomic(Metadata { clean: false, etype: None }, Reference(UserName(\"b\"))))",
      "rule_name": "\"leq_to_ineq\"",
      "rule_set": "[(\"Minion\", 4100)]",
      "transformed_expression": "FlatIneq(Metadata { clean: false, etype: None }, Reference(MachineName(0)), Reference(UserName(\"b\")), Int(0))"
    }
  },
  {
    "Number of rules applied": 4
  }
]