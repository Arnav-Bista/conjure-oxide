Model before rewriting:

letting a be {1,2,3}
letting b be {2,3}
letting c be {2}

such that

(c subset (b intersect a))

--

c, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2} 

--

({2} subset (b intersect a)), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(Set([Int(2)]) subset (b intersect a)) 

--

b, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2,3} 

--

(Set([Int(2)]) subset ({2,3} intersect a)), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(Set([Int(2)]) subset (Set([Int(2), Int(3)]) intersect a)) 

--

(Set([Int(2)]) subset (Set([Int(2), Int(3)]) intersect a)), 
   ~~> subset_to_subset_eq_neq ([("Base", 8700)]) 
and([(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)),(Set([Int(2)]) != (Set([Int(2), Int(3)]) intersect a));int(1..)]) 

--

and([(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)),(Set([Int(2)]) != (Set([Int(2), Int(3)]) intersect a));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)),
(Set([Int(2)]) != (Set([Int(2), Int(3)]) intersect a)) 

--

(Set([Int(2)]) != (Set([Int(2), Int(3)]) intersect a)), 
   ~~> neq_not_eq_sets ([("Base", 8700)]) 
!(((Set([Int(2), Int(3)]) intersect a) = Set([Int(2)]))) 

--

((Set([Int(2), Int(3)]) intersect a) = Set([Int(2)])), 
   ~~> eq_to_subset_eq ([("Base", 8800)]) 
and([((Set([Int(2), Int(3)]) intersect a) subsetEq Set([Int(2)])),(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a));int(1..)]) 

--

!(and([((Set([Int(2), Int(3)]) intersect a) subsetEq Set([Int(2)])),(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a));int(1..)])), 
   ~~> distribute_not_over_and ([("Base", 8400)]) 
or([!(((Set([Int(2), Int(3)]) intersect a) subsetEq Set([Int(2)]))),!((Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)));int(1..)]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2,3} 

--

(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect {1,2,3})),
or([!(((Set([Int(2), Int(3)]) intersect a) subsetEq Set([Int(2)]))),!((Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
or([!(((Set([Int(2), Int(3)]) intersect a) subsetEq Set([Int(2)]))),!((Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)));int(1..)]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2,3} 

--

or([!(((Set([Int(2), Int(3)]) intersect {1,2,3}) subsetEq Set([Int(2)]))),!((Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect a)));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Final model:

letting a be {1,2,3}
letting b be {2,3}
letting c be {2}

such that

true

